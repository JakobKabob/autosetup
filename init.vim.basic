
"------------------------- SETTINGS --------------------------
set hidden
set clipboard=unnamedplus
set undofile
set undodir=~/.config/nvim/tmp
set directory=~/.vim/tmp
set undolevels=10000
set ttyfast
set list
set listchars=tab:>_,trail:.,extends:$,nbsp:.,conceal:-,precedes:>
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set nowrap
set number
set noshowmode " lightline handles this
if has('termguicolors')
  set termguicolors
endif
noremap ; :
nnoremap <silent> <Space> :w<cr>
nnoremap j gj
nnoremap k gk

"------------------------- CUSTOM MODS --------------------------

"TMUXMOVE
function! TmuxMove(direction)
	let wnr = winnr()
	silent! execute 'wincmd ' . a:direction
	" If the winnr is still the same after moved, it is the last pane
	if wnr == winnr()
		call system('tmux select-pane -' . tr(a:direction, 'phjkl', 'lLDUR'))
    end
endfunction

nnoremap <silent> <c-h> :call TmuxMove('h')<cr>
nnoremap <silent> <c-j> :call TmuxMove('j')<cr>
nnoremap <silent> <c-k> :call TmuxMove('k')<cr>

"CURSOR IS NOW A LINE IN INSERT MODE 
if $TERM_PROGRAM =~ "iTerm"
    let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
    let &t_EI = "\<Esc>]50;CursorShape=0\x7" " Block in normal mode
endif

"DELETE CURRENT FILE
function Delf()
    call delete(expand('%'))
    echo "This file has been deleted, buffer still exists until nvim is closed, I guess you could write the file again to prevent it from being lost forever"
endfunction

function FormatJSON()
    execute '%!python -m json.tool'
    echo "json file reformatted"
endfunction

"------------------------- Plugins via VimPlug --------------------------

call plug#begin()
Plug 'preservim/nerdtree'
Plug 'tpope/vim-surround'
Plug 'airblade/vim-gitgutter'
Plug 'itchyny/lightline.vim'
Plug 'sainnhe/sonokai'
Plug 'junegunn/rainbow_parentheses.vim'
Plug 'tomlion/vim-solidity'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
call plug#end()


"TREESITTER MODULES
lua << EOF
require'nvim-treesitter.configs'.setup {
  highlight = {
    enable = true,
    additional_vim_regex_highlighting = false,
  },
}
EOF

"COLORSCHEME SONOKAI
" The configuration options should be placed before `colorscheme sonokai`.
let g:sonokai_style = 'atlantis'
let g:sonokai_enable_italic = 1
let g:sonokai_disable_italic_comment = 0
let g:sonokai_transparent_background = 1 
colorscheme sonokai

"NERDTREE
nnoremap <silent> <C-k><C-B> :NERDTreeToggle<CR>
"autocmd VimEnter * NERDTree

"LIGHTLINE
let g:lightline = {
  \     'active': {
  \         'left': [['mode', 'paste' ], ['readonly', 'filename', 'modified']],
  \         'right': [['lineinfo'], ['percent'], ['filetype', 'fileencoding', 'fileformat']]
  \     }
  \ } 
